class Solution:
    def minMalwareSpread(self, matrix: List[List[int]], initial: List[int]) -> int:
        graph = collections.defaultdict(list)
        for i, row in enumerate(matrix):
            for j, val in enumerate(row):
                if val == 1:
                    graph[i].append(j)
        inf_relations = collections.defaultdict(list)
        for init in initial:
            seen = set(initial)
            frontier = collections.deque([init])
            while frontier:
                infect = frontier.popleft()
                for nei in graph[infect]:
                    if nei not in seen:
                        seen.add(nei)
                        frontier.append(nei)
                        inf_relations[nei].append(init)
        n = len(matrix)
        res = [0] * n
        for node, malwares in inf_relations.items():
            if len(malwares) == 1:
                res[malwares[0]] += 1
        mx = max(res)
        if mx == 0:
            return min(initial)
        else:
            return res.index(mx)
